/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <7 8>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <9 8>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <3 2>;
        };

        qwe_game {
            bindings = <&tog 5>;
            key-positions = <37 40>;
        };

        base_layer {
            bindings = <&tog 0>;
            key-positions = <38 39>;
        };

        Cut {
            bindings = <&kp LC(X)>;
            key-positions = <26 28>;
        };

        Copy {
            bindings = <&kp LC(C)>;
            key-positions = <27 26>;
        };

        Paste {
            bindings = <&kp LC(V)>;
            key-positions = <27 28>;
        };

        Multipy {
            bindings = <&kp KP_MULTIPLY>;
            key-positions = <28 29>;
        };

        Divide {
            bindings = <&kp KP_DIVIDE>;
            key-positions = <16 17>;
        };

        CapsLook {
            bindings = <&kp CAPSLOCK>;
            key-positions = <4 5>;
        };
    };

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <39 40 41 30 31 32 33 6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 11 23 35>;
        };

        hmr: homewrow_mods_righ {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };

        dot_comma: dot_comma {
            compatible = "zmk,behavior-tap-dance";
            label = "DOT_COMMA";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp QUESTION>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | ALT | LWR | SPC |   | ENT | RSE  | GUI |

            bindings = <
&kp TAB    &kp Q        &kp W        &kp E          &kp R         &kp T          &kp Y    &kp U         &kp I          &kp O        &kp P                    &kp BSPC
&kp LCTRL  &hml LCMD A  &hml LALT S  &hml LSHIFT D  &hml LCTRL F  &kp G          &kp H    &hmr RCTRL J  &hmr RSHIFT K  &hmr LALT L  &hmr LEFT_GUI SEMICOLON  &kp SQT
&kp LSHFT  &kp Z        &kp X        &kp C          &kp V         &kp B          &kp N    &kp M         &kp COMMA      &kp DOT      &kp FSLH                 &kp ESC
                                     &kp LALT       &mo 1         &lt 4 SPACE    &kp RET  &mo 2         &kp LGUI
            >;
        };

        num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | CTRL | F1  | F2  | F3  | F4  | F5  |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | ALT |     | SPC |   | ENT |     | GUI |

            bindings = <
&kp TAB    &kp N7  &kp N8  &kp N9      &kp N0     &kp DEL     &kp HOME      &kp PAGE_UP   &kp PAGE_DOWN  &kp END        &kp N0         &kp BSPC
&kp LCTRL  &kp N4  &kp N5  &kp N6      &kp MINUS  &kp BSPC    &kp LEFT      &kp DOWN      &kp UP         &kp RIGHT      &kp PAGE_UP    &trans
&kp LSHFT  &kp N1  &kp N2  &kp N3      &kp PLUS   &kp RET     &kp LC(LEFT)  &kp LC(DOWN)  &kp LC(UP)     &kp LC(RIGHT)  &kp PAGE_DOWN  &kp ESC
                           &dot_comma  &trans     &mo 3       &kp RET       &trans        &kp LGUI
            >;
        };

        raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | ALT |     | SPC |   | ENT |     | GUI |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR      &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &kp CAPSLOCK  &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans        &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LALT  &trans        &kp SPACE    &kp RET    &trans     &kp LGUI
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | ALT |     | SPC |   | ENT |     | GUI |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LALT      &trans        &kp SPACE       &kp RET   &trans    &kp LGUI
            >;
        };

        fn_media {
            bindings = <
&kp TAB    &kp F11  &kp F12  &trans    &trans  &trans     &kp K_MUTE    &kp C_PLAY  &trans                &trans  &trans  &trans
&kp LCTRL  &kp F1   &kp F2   &kp F3    &kp F4  &kp F5     &kp C_VOL_UP  &kp C_NEXT  &kp C_BRIGHTNESS_INC  &trans  &trans  &trans
&kp LSHFT  &kp F6   &kp F7   &kp F8    &kp F9  &kp F10    &kp C_VOL_DN  &kp C_PREV  &kp C_BRIGHTNESS_DEC  &trans  &trans  &kp ESC
                             &kp LALT  &trans  &trans     &trans        &trans      &trans
            >;
        };

        qwerty_game {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LALT  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp LGUI
            >;
        };
    };
};
